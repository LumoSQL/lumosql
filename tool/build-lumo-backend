#!/bin/sh -e

# Build SQLite with an optional alternative backend

# Copyright 2020 The LumoSQL Authors under the terms contained in LICENSES/MIT
#
# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: 2020 The LumoSQL Authors

# usage: build-lumo-backend BUILD_DIR TARGET SOURCES_DIR

# BUILD_DIR is the top-level build directory

# TARGET is the LumoSQL target to build

# SOURCES_DIR is the directory containing the sources; normally this will
# be something produced by get-sources

if [ $# -ne 3 ]
then
    echo "Usage: $(basename "$0") BUILD_DIR TARGET SOURCES_DIR" >&2
    echo "See comments at top of script for more information" >&2
    exit 1
fi

BUILD_TOP="$1"
TARGET="$2"
LUMO_SOURCES="$3"

LUMO_DIR="$LUMO_SOURCES/.lumosql-work"

# create build directory - this must not already exist
mkdir "$BUILD_TOP/$TARGET"

# copy info to it
mkdir "$BUILD_TOP/$TARGET/.lumosql-work"
cp -a "$LUMO_DIR/"* "$BUILD_TOP/$TARGET/.lumosql-work/"

# if we have already built the build_target, there's nothing more to do
BUILD_TARGET="$(cat "$LUMO_DIR/build_target")"
BUILD_DIR="$BUILD_TOP/$BUILD_TARGET"
if [ -d "$BUILD_DIR" -a "$BUILD_TARGET" != "$TARGET" ]
then
    echo "Target $TARGET has same build as $BUILD_TARGET, not rebuilding"
    exit 0
fi

# we need to build it
LUMO_BACKEND_NAME="$(cat "$LUMO_DIR/backend_name")"
LUMO_BACKEND_VERSION="$(cat "$LUMO_DIR/backend_version")"
SQLITE3_VERSION="$(cat "$LUMO_DIR/sqlite3_version")"
TITLE="$(cat "$LUMO_DIR/title")"

# make sure we have all the stuff we need
OK=true
if [ -n "$SQLITE3_VERSION" ]
    then
    if [ ! -d "$LUMO_SOURCES/sqlite3/.lumosql" ]
    then
	echo "Missing sources for 'sqlite3'" >&2
	OK=false
    fi
elif [ -z "$LUMO_BACKEND_NAME" ]
then
    echo "Cannot build without either sqlite3 or a backend!" >&2
    exit 1
fi
if [ -n "$LUMO_BACKEND_NAME" ]
then
    if [ ! -d "$LUMO_SOURCES/$LUMO_BACKEND_NAME/.lumosql" ]
    then
	echo "Missing sources for '$LUMO_BACKEND_NAME'" >&2
	OK=false
    fi
fi
$OK || exit 1

# we need an absolute path for LUMO_SOURCES if we don't have one
LUMO_SOURCES="`realpath -e "$LUMO_SOURCES"`"

# set up build directory - this fails if it already exist
mkdir "$BUILD_DIR/sqlite3"
[ -n "$LUMO_BACKEND_NAME" ] && mkdir "$BUILD_DIR/$LUMO_BACKEND_NAME"
cd "$BUILD_DIR"
ls "$LUMO_SOURCES/$LUMO_BACKEND_NAME" | egrep '^LICEN[CS]E|^COPYING' | while read name
do
    cp -a "$LUMO_SOURCES/$LUMO_BACKEND_NAME/$name" "sqlite3/$name" || true
done

LUMO_BUILD="`pwd`"
if [ -n "$LUMO_BACKEND_NAME" ]
then
    # build the backend first...
    export LUMO_SOURCES LUMO_BACKEND_NAME LUMO_BACKEND_VERSION SQLITE3_VERSION
    cd "$LUMO_BACKEND_NAME"
    sh "$LUMO_SOURCES/$LUMO_BACKEND_NAME/.lumosql/lumo.build"
    cd "$LUMO_BUILD"
fi

cd sqlite3

if [ -n "$SQLITE3_VERSION" ]
then
    # configure
    echo "Configuring $TITLE"
    "$LUMO_SOURCES/sqlite3/configure"

    # build
    echo "Building $TITLE"
    make LUMO_SOURCES="$LUMO_SOURCES" LUMO_BACKEND="$LUMO_BACKEND_NAME" LUMO_BUILD="$LUMO_BUILD"
else
    # we assume that the backend has built its own version of sqlite
    ln -s "../$LUMO_BACKEND_NAME/sqlite3" .
fi

# all done
./sqlite3 --version

