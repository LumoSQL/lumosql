#!/usr/bin/tcl

# how to build this backend... this runs in TCL and has access to various
# global variables - see documentation; it runs with current directory set
# to the top of the backend sources

global backend_name
global backend_version
global sqlite3_version

puts "Configuring $backend_name $backend_version"
file delete -force build_unix
file mkdir build_unix
cd build_unix

if {$sqlite3_version ne ""} {
    # build as a backend
    system ../dist/configure
} else {
    # build standalone using included sqlite3
    system ../dist/configure --enable-sql_compat
}

puts "Building $backend_name $backend_version"
system make

# now move files of interest to lumo/build
global lumo_dir
set dest [file join $lumo_dir build]
if {! [file isdirectory $dest]} { file mkdir $dest }
set sofile [lindex [glob -directory .libs libdb-*.so] 0]
file link [file join .libs libdb.so] [file tail $sofile]
set afile [lindex [glob -directory .libs libdb-*.a] 0]
file link [file join .libs libdb.a] [file tail $afile]
foreach fn [glob -directory .libs lib*] {
    file rename $fn $dest
}

if {$sqlite3_version eq ""} {
    file rename [file join .libs sqlite3] $dest
} else {
    # TODO - anything else we may need to build as backend
}

